<%= javascript_include_tag 'bigfoot' %>
<script>
  $.bigfoot();
</script>

<p>
  I built this site on Ruby on Rails to be a clone of
  <%= link_to 'Archive of our Own', 'http://archiveofourown.org/' %> (also
  AO3 for short), a
  popular fanfiction <%= render 'misc/fn_a', num: 1 %>
  archive. While
  the original site is also written in Rails, I did not copy any of their code
  when building my own (with one exception: the search page allows you to
  filter by publication date, and this requires the application to parse
  phrases like "three weeks ago" into computer-comprehensible dates. I
  copied part of the code AO3 uses to parse this, although I changed it
  significantly later on). I did, however, sometimes look at their code to get
  an idea of the general approach they used, or to see what gems they used.
</p>
<h3 id='feature-list'>Features</h3>
<ul>
  <li><p>
    <strong>User-Submitted Stories:</strong> Any logged-in user can
    <%= link_to 'create a story', new_story_path %>. Stories can be created or
    edited with a WYSIWYG editor.
  </p></li>
  <li><p>
    <strong>Tagging:</strong> Stories can be tagged with three kinds of tags:
    content, character, and source. <%= link_to 'Content tags', tags_path %>
    are indications of the general content of a story; for instance, tagging a
    story "romance" indicates that the story is a romantic one.
    <%= link_to 'Character tags', characters_path %> indicate which canon
    characters are featured in a fanfic; for instance, if writing a Harry
    Potter fanfic, you might tag it with
    <%= link_name Character, "Harry Potter" %>,
    <%= link_name Character, "Hermione Granger" %>, et cetera. In some cases,
    multiple characters may have the same name; this is useful because many
    different fandoms may have a character named "John Smith," and we don't
    want to confuse these characters with one another.
    <%= link_to 'Source tags', sources_path %> (AKA fandom tags) indicate what fandom a story
    belongs to; in the earlier example of a Harry Potter fanfic, it would be
    tagged with <%= link_name Source, "Harry Potter" %>. Each source may belong
    to one or more categories <%= render 'misc/fn_a', num: 2 %>; for
    instance, Harry Potter is both a book series and a film series, so it
    belongs to the
    <%= link_to 'book', type_path('book') %> and
    <%= link_to 'movie', type_path('movies') %> categories. Note that the three
    types of tags are entirely separate; the Harry Potter character tag is not
    the same as the Harry Potter source tag. Logged-in users can also
    designate any number of content tags as "favorite" tags, if they check
    those tags frequently. When you are logged in, the user dropdown menu in
    the top right will have options for managing your favorite tags, and the
    home page will display a list of your favorite tags.
  </p></li>
  <li><p>
    <strong>Tag Implications:</strong> Tags can imply other tags. For instance,
    <%= link_name2(Tag, "dog") %> implies <%= link_name2 Tag, "animal" %>.
    Therefore, any story tagged "dog" will also automatically be tagged
    "animal", and you cannot remove the "animal" tag as long as the "dog" tag
    is present. Similarly, characters can imply sources; a story with the
    <%= link_name2 Character, "Frodo Baggins" %> character is automatically a
    part of the <%= link_name2 Source, "Lord of the Rings" %> fandom. Only
    administrators can change implications. Checks exist to make sure that no
    circular implication chains are created.
  </p></li>
  <li>
    <p><strong>Content Filtering:</strong> Some users prefer not to see stories
    with adult content. This is a setting that can be toggled by the user. By
    default, newly created users cannot see adult content, nor can people who
    aren't logged in. However, users can always see stories they wrote, even if
    those stories are adult. Non-visible stories won't show up in searches,
    won't be visible in user pages, won't show up in indices, et cetera; from
    the perspective of a user who doesn't want to see them, these stories do
    not exist.</p>
    <p>
      Stories can be considered "adult" for one of two reasons. First, certain
      content tags are treated as adult, and any story tagged with one is
      automatically an adult story.
      <% adult_tag = Tag.where(adult: true).order("Random()").first %>
      An example of such a tag is <%= name_link adult_tag %>. (Note that if you
      try to view the stories in that tag, you may see none listed. This is
      because adult stories are automatically concealed from users who don't
      have "see adult stories" enabled in their settings). Just like adult
      stories, adult tags are concealed from users who don't want to see them;
      those tags will not be listed on the
      <%= link_to 'tag cloud page', tags_path %>, will not show up in tag search
      results, et cetera. Currently, <%= num_adult = Tag.where(adult: true).count %>
      of the <%= pluralize(Tag.count, 'tag') %> on this site
      <%= num_adult == 1 ? 'is' : 'are' %> marked as adult.
    </p>
    <p>
      The second reason that a story can be considered adult is that its author
      has manually indicated that it is adult. Note that this override only goes one
      way: it is possible to indicate that a story with no adult tags is still
      adult, but it is not possible to indicate that a story with adult tags is
      non-adult. An example of such a story is
      <%= name_link Story.where(adult_override: true).order("Random()").first %>.
      Currently, of the <%= pluralize(Story.count, 'story') %> on this site,
      <%= num_over = Story.where(adult_override: true).count %>
      <%= num_over == 1 ? 'has' : 'have' %> this option enabled.
      <% num_adult = Story.only_adult(Story.all).count %>
      In total, there <%= num_adult == 1 ? 'is' : 'are' %>
      <%= pluralize(num_adult, 'adult story') %> and
      <%= pluralize(Story.non_adult(Story.all).count, 'non-adult story') %> on this
      site.
    </p>
  </li>
  <li><p>
    <strong>Searching:</strong> There is robust search capability. I provide
    support for boolean queries and wildcard searches. The
    <%= link_to 'story search', story_search_path %> page is the most powerful,
    allowing users to search and order by many different fields. In addition,
    you can filter the results of a search, thereby refining it further (this
    filtering capability is also available on many other pages that contain a
    list of stories). The <%= link_to 'general search', search_path %> (which
    lets you find content tags or users) and
    <%= link_to 'source search', source_search_path %> pages are less powerful,
    mostly because they are searching things that don't have as many fields.
  </p></li>
  <li>
    <p><strong>User Accounts:</strong> Anybody with a valid email address can
    <%= link_to 'create an account', register_path %>. User passwords are
    stored as a salted hash.IMPORTANT NOTE: many
    spam filters seem to think our account registration emails are spam. If you
    try to register and don't receive a confirmation email, check your spam
    folder. Having an account allows
    you to post and edit your own stories, comment on other people's stories
    and on newsposts, and bookmark favorite stories for later. Users can also
    set various preferences for browsing the site, such as choosing a time zone
    (which will cause all dates and times to be displayed in that time zone),
    uploading a user avatar, and choosing whether they would like to see adult
    content.</p>
    <p>Viewing a user's profile page lets you see all the stories they've
    posted, and if you are logged in, you can "subscribe" to that user, which
    means that you will get an email notification when they create a new story
    or add a new chapter to an existing story.</p>
    <p>Users can also either delete or deactivate their own accounts.
    Deleting your account also deletes all your stories, comments, and
    bookmarks. Deactivating your account leaves those in place.</p>
  </li>
  <li><p>
    <strong>Administrator Accounts:</strong> Some users are "administrators,"
    which gives them certain powers that ordinary users do not have. The only
    way to become an administrator is to be designated as such by an existing
    administrator. Administators can post
    <%= link_to 'newsposts', newsposts_path %>, ban and unban users, alter tag
    implications, change source categories, delete inappropriate stories, and
    perform various other maintenance tasks. When a user is banned, their
    email address is recorded, and that address can no longer be used to sign
    up for new accounts. This also checks for trivial variations on that
    address; for instance, "firstname.lastname@gmail.com" is considered to be
    the same as "firstnameLastname@gmail.com" because GMail will send these
    both to the same person (other email providers, which do not treat periods
    in this way, are exempt from this particular rule). Banning a user will
    also delete all their stories, comments, and bookmarks.
  </p></li>
  <li><p>
    <strong>Comments:</strong> Users can comment on stories, and the comments
    will be properly displayed below the story. Users can also edit their own
    comments; if a comment has been edited, the comment header will indicate
    this fact.
  </p></li>
  <li><p>
    <strong>Bookmarks:</strong> Users can bookmark favorite stories. This
    serves two purposes: to allow users to save favorite stories to read later,
    and to act as a recommendation system. A given bookmark may be either
    private or public. Private bookmarks are only visible to the user who made
    them, while public bookmarks are visible to any user who can see the story
    bookmarked (bookmarks of adult stories will not be visible to users who
    cannot see adult stories). When creating a bookmark, you can optionally add
    a note, either to remind yourself why you bookmarked it or to act as a
    review for others who are using your bookmarks as recommendations.
  </p></li>
  <li><p>
    <strong>Newsposts:</strong> Administrators can make newsposts, which are
    visible on the <%= link_to 'home page', home_path %> and on
    <%= link_to 'their own page', newsposts_path %>. Just like stories,
    newsposts can be tagged, although their tags are a separate set from the
    tags used by stories. Also like stories, any user can comment on a
    newspost, although only administrators can create or edit the newspost
    itself. The home page displays the first paragraph of each of the three
    most recent newsposts. The newspost page displays the entire newspost.
  </p></li>
</ul>
<h3 id='bugs'>Known Issues</h3>
<ul>
  <li><p>
    This site requires users to have both JavaScript and CSS enabled. When I
    started making the site I did try to have it degrade gracefully, but that
    became too time-consuming, so some features are just flat-out unavailable
    to users without these.
  </p></li>
  <li><p>
    Security is less than complete. I have guarded against accidental harm,
    but not against malice. While there is no way I know of to cause problems
    by normal use of the site, there are a few cases where a user could do so
    by modifying request headers. Similarly to the above issue, this is mostly
    because of lack of time; it wouldn't be very difficult to make it more
    secure, but it would be time-consuming.
  </p></li>
</ul>
<h3 id='non-features'>Unimplemented Features</h3>
<p>There are some features of AO3 that I did not implement. These include:</p>
<ul>
  <li><p>
    <strong>Translation:</strong> The original site allows users to select
    their language, and have the interface display in that language. I didn't
    do this, because I don't speak any languages other than English.
  </p></li>
  <li><p>
    <strong>Custom Skins:</strong> Similarly to the above, AO3 allows users to
    choose from several stylesheets; I have my stylesheet hardcoded in.
  </p></li>
  <li><p>
    <strong>Kudos:</strong> AO3 has two separate mechanisms to record stories
    you like: bookmarks and kudos. I didn't see the point of this, so I just
    have bookmarks.
  </p></li>
  <li><p>
    <strong>Upload and Download:</strong> AO3 allows users to upload their
    stories as document files. My site requires users to use the on-site
    editor. (However, if you copy-and-paste from a local document, formatting
    will be preserved, so the practical difference is minimal.) Similarly, AO3
    lets you download a story as an ebook. I didn't do this because that would
    require me to spend a lot of time familiarizing myself with the intricacies
    of a number of different ebook formats.
  </p></li>
  <li><p>
    <strong>Admin Levels:</strong> AO3 has a number of different levels of
    users, each with different privileges. For simplicity I collapsed this
    structure into just two levels: regular users and administrators.
  </p></li>
  <li><p>
    <strong>Detailed Ratings:</strong> AO3 has four different levels of
    maturity rating (general, teen, mature, and explicit). I simplified this
    into just two levels.
  </p></li>
  <li><p>
    <strong>Relationship Tags:</strong> AO3 has a class of tags that I do not:
    relationship tags, which indicate a romantic relationship between two
    characters (e.g., if Alice and Bob are involved in a story, that story
    would have the 'Alice/Bob' tag). If a user of my site wanted to tag a
    relationship, they would have to use a content tag, rather than having a
    separate type of tag dedicated to relationships.
  </p></li>
  <li><p>
    <strong>Tag Aliases:</strong> AO3 allows tags to have multiple names, which
    can be useful to combine several synonyms into one tag. On my site, each
    tag has only one name.
  </p></li>
  <li><p>
    <strong>In-Story Images:</strong> In addition to user avatars, AO3 also
    allows users to upload images to use as illustrations in their stories.
    This would likely be very easy to implement, but I left it out because I
    have limited data storage.
  </p></li>
  <li><p>
    <strong>RSS feeds:</strong> I do not provide RSS feeds to let users know
    when a new story matching specified criteria is posted. I don't have this.
    However, I do provide
  </p></li>
  <li><p>
  </p></li>
  <li><p>
  </p></li>
</ul>

<div class='footnotes'>
  <ol>
    <%= render layout: 'misc/fn_b', locals: {num: 1} do %>
      Fanfiction, or "fanfic," is fiction written by fans of, and featuring
      characters from, popular media
    <% end %>
    <%= render layout: 'misc/fn_b', locals: {num: 2} do %>
      Categories are not tags, but in some respects act like tags. Users cannot
      create or delete categories, as all ten categories are hardcoded into the
      database structure.
    <% end %>
  </ol>
</div>
